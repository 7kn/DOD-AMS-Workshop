filter {

	if [type] == "application" and [message] =~ /NAWModule/ {
        	drop { }
	}
	
	mutate {
                # Default configuration for mandatory fields for corporate ELK Solution
                # log_shipper => Should be the node hostname
                # log_version => Should be the version of the logstash shipper

                add_field => { "log_indexer" => "datalake"}
                add_field => { "log_version" => "logstash-2.3.3"}
        }

        if [type] == "syslog" {
                if [facility] == 4 or [facility] == 10 {
                        mutate {
                                replace => { "message" => "Due security policy this message is masked" }
                                add_tag => [ "mask-applied" ]
                        }
                }
        }
	
	if [type] == "tomcat" {
                grok {
                        match => [ "message", "%{MONTHDAY:tmp_mday}-%{MONTH:tmp_month}-%{YEAR:tmp_year} %{TIME:tmp_time} %{LOGLEVEL:appl_loglevel} \[%{DATA:appl_module}\] %{DATA:appl_class} %{GREEDYDATA:appl_message}" ]
                }

                mutate {
                        add_field => { "timestamp" => "%{tmp_mday}-%{tmp_month}-%{tmp_year} %{tmp_time}" }
                        remove_field => [ "tmp_mday","tmp_month","tmp_year","tmp_time" ]
                }

                date {
                        match => [ "timestamp", "dd-MMM-yyyy HH:mm:ss.SSS" ]
                        remove_field => [ "timestamp" ]
                }
	}
	
	if [type] == "application" {
                grok {
                        match => [ "message", "%{MONTHDAY:tmp_mday}-%{MONTH:tmp_month}-%{YEAR:tmp_year} %{TIME:tmp_time} %{LOGLEVEL:appl_loglevel} \[%{DATA:appl_module}\] %{DATA:appl_class} %{GREEDYDATA:appl_message}" ]
			match => [ "message", "%{LOGLEVEL:appl_loglevel} \[%{DATA:appl_module}\] %{DATA:appl_class} %{GREEDYDATA:appl_message}" ]
                }
		
		if [appl_module] =~ /HouseKeepingModule/ {
             		mutate {
                    		add_field => { "appl_context" => "Technical" }
             		}
		}

		if [appl_module] =~ /RegistrationModule/ {
             		mutate {
                    		add_field => { "appl_context" => "Functional" }
             		}
		}
		if [tmp_mday] {	
                	mutate {
                        	add_field => { "timestamp" => "%{tmp_mday}-%{tmp_month}-%{tmp_year} %{tmp_time}" }
                        	remove_field => [ "tmp_mday","tmp_month","tmp_year","tmp_time" ]
                	}

                	date {
                        	match => [ "timestamp", "dd-MMM-yyyy HH:mm:ss.SSS" ]
                        	remove_field => [ "timestamp" ]
                	}
		}
	        
		else if "kafka" in [tags] {
			date {
                                match => [ "timestamp", "ISO8601" ]
                                remove_field => [ "timestamp" ]
                	}
		}
    }
	
    if [type] == "performance" {
        kv {
        	field_split => "|"
        	add_field => { "performance_timestamp" => "%{key}" }
        	add_field => { "performance_value" => "%{value}" }
        	add_field => { "appl_module" => "%{module}" }
    	}

    	mutate {
        	convert => [ "performance_value", "integer" ]
        	remove_field => [ "key" ]
        	remove_field => [ "value" ]
        	remove_field => [ "module" ]
        	add_field => { "timestamp" => "%{performance_timestamp}" }
    	}

    	date {
        	match => [ "timestamp", "yyyy-MM-dd HH:mm:ss.SSS" ]
         	remove_field => [ "timestamp" ]
    	}
    }

    if "_grokparsefailure" in [tags] {

    mutate {
        replace => { "message" => "PATTERN MISSING: %{message}" }
    }
}

}
